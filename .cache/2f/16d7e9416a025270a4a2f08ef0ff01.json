{"id":"node_modules/konva/lib/shapes/Transformer.js","dependencies":[{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\package.json","includedInParent":true,"mtime":1593318185767},{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\package.json","includedInParent":true,"mtime":1593215474632},{"name":"../Util","loc":{"line":27,"column":21},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Util.js"},{"name":"../Factory","loc":{"line":28,"column":24},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Factory.js"},{"name":"../Node","loc":{"line":29,"column":21},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Node.js"},{"name":"../Shape","loc":{"line":30,"column":22},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Shape.js"},{"name":"./Rect","loc":{"line":31,"column":21},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Rect.js"},{"name":"../Group","loc":{"line":32,"column":22},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Group.js"},{"name":"../Global","loc":{"line":35,"column":23},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Global.js"},{"name":"../Validators","loc":{"line":34,"column":27},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\shapes\\Transformer.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Validators.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nvar TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    var x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    var y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return __assign(__assign({}, shape), { rotation: shape.rotation + angleRad, x: x,\n        y: y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    var center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    var snapped = newRotationRad;\n    for (var i = 0; i < snaps.length; i++) {\n        var angle = Global_1.Konva.getAngle(snaps[i]);\n        var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nvar Transformer = (function (_super) {\n    __extends(Transformer, _super);\n    function Transformer(config) {\n        var _this = _super.call(this, config) || this;\n        _this._transforming = false;\n        _this._createElements();\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n        _this.update = _this.update.bind(_this);\n        _this.on(ATTR_CHANGE_LIST, _this.update);\n        if (_this.getNode()) {\n            _this.update();\n        }\n        return _this;\n    }\n    Transformer.prototype.attachTo = function (node) {\n        this.setNode(node);\n        return this;\n    };\n    Transformer.prototype.setNode = function (node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    };\n    Transformer.prototype.getNode = function () {\n        return this._nodes && this._nodes[0];\n    };\n    Transformer.prototype.setNodes = function (nodes) {\n        var _this = this;\n        if (nodes === void 0) { nodes = []; }\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1) {\n            this.rotation(nodes[0].rotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach(function (node) {\n            var additionalEvents = node._attrsAffectingSize\n                .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\n                .join(' ');\n            var onChange = function () {\n                _this._resetTransformCache();\n                if (!_this._transforming) {\n                    _this.update();\n                }\n            };\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR, onChange);\n            node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n            node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n            _this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    };\n    Transformer.prototype._proxyDrag = function (node) {\n        var _this = this;\n        var lastPos;\n        node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n            lastPos = node.getAbsolutePosition();\n            if (!_this.isDragging() && node !== _this.findOne('.back')) {\n                _this.startDrag();\n            }\n        });\n        node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n            if (!lastPos) {\n                return;\n            }\n            var abs = node.getAbsolutePosition();\n            var dx = abs.x - lastPos.x;\n            var dy = abs.y - lastPos.y;\n            _this.nodes().forEach(function (otherNode) {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                var otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag();\n            });\n            lastPos = null;\n        });\n    };\n    Transformer.prototype.getNodes = function () {\n        return this._nodes;\n    };\n    Transformer.prototype.getActiveAnchor = function () {\n        return this._movingAnchorName;\n    };\n    Transformer.prototype.detach = function () {\n        if (this._nodes) {\n            this._nodes.forEach(function (node) {\n                node.off('.' + EVENTS_NAME);\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    };\n    Transformer.prototype._resetTransformCache = function () {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    };\n    Transformer.prototype._getNodeRect = function () {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    };\n    Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n        if (rot === void 0) { rot = this.rotation(); }\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        var box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.__getNodeRect = function () {\n        var _this = this;\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        var totalPoints = [];\n        this.nodes().map(function (node) {\n            var box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: _this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        var tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        var p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    };\n    Transformer.prototype.getX = function () {\n        return this._getNodeRect().x;\n    };\n    Transformer.prototype.getY = function () {\n        return this._getNodeRect().y;\n    };\n    Transformer.prototype.getWidth = function () {\n        return this._getNodeRect().width;\n    };\n    Transformer.prototype.getHeight = function () {\n        return this._getNodeRect().height;\n    };\n    Transformer.prototype._createElements = function () {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    };\n    Transformer.prototype._createAnchor = function (name) {\n        var _this = this;\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', function (e) {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', function () {\n            var rad = Global_1.Konva.getAngle(_this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content.style.cursor = cursor;\n            _this._cursorChange = true;\n        });\n        anchor.on('mouseout', function () {\n            anchor.getStage().content.style.cursor = '';\n            _this._cursorChange = false;\n        });\n        this.add(anchor);\n    };\n    Transformer.prototype._createBack = function () {\n        var _this = this;\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc: function (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: function (ctx, shape) {\n                if (!_this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = _this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n    };\n    Transformer.prototype._handleMouseDown = function (e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e, target: this.getNode() });\n        this.getNode()._fire('transformstart', { evt: e, target: this.getNode() });\n    };\n    Transformer.prototype._handleMouseMove = function (e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        var pp = stage.getPointerPosition();\n        var newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        var oldAbs = anchorNode.getAbsolutePosition();\n        anchorNode.setAbsolutePosition(newNodePos);\n        var newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            var delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            var newRotation = oldRotation + delta;\n            var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            var diff = snappedRot - attrs.rotation;\n            var shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    };\n    Transformer.prototype._handleMouseUp = function (e) {\n        this._removeEvents(e);\n    };\n    Transformer.prototype.getAbsoluteTransform = function () {\n        return this.getTransform();\n    };\n    Transformer.prototype._removeEvents = function (e) {\n        if (this._transforming) {\n            this._transforming = false;\n            window.removeEventListener('mousemove', this._handleMouseMove);\n            window.removeEventListener('touchmove', this._handleMouseMove);\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\n            window.removeEventListener('touchend', this._handleMouseUp, true);\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                node.fire('transformend', { evt: e, target: node });\n            }\n            this._movingAnchorName = null;\n        }\n    };\n    Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n        var _this = this;\n        var oldAttrs = this._getNodeRect();\n        var minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        var allowNegativeScale = true;\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            var offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            var offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        var baseSize = 10000000;\n        var oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        var newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        var delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach(function (node) {\n            var parentTransform = node.getParent().getAbsoluteTransform();\n            var localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            var newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            var attrs = newLocalTransform.decompose();\n            node._batchTransformChanges(function () {\n                node.setAttrs(attrs);\n            });\n            _this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    };\n    Transformer.prototype.forceUpdate = function () {\n        this._resetTransformCache();\n        this.update();\n    };\n    Transformer.prototype._batchChangeChild = function (selector, attrs) {\n        var anchor = this.findOne(selector);\n        anchor._batchTransformChanges(function () {\n            anchor.setAttrs(attrs);\n        });\n    };\n    Transformer.prototype.update = function () {\n        var _this = this;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').each(function (node) {\n            node._batchTransformChanges(function () {\n                node.setAttrs({\n                    width: anchorSize,\n                    height: anchorSize,\n                    offsetX: anchorSize / 2,\n                    offsetY: anchorSize / 2,\n                    stroke: _this.anchorStroke(),\n                    strokeWidth: _this.anchorStrokeWidth(),\n                    fill: _this.anchorFill(),\n                    cornerRadius: _this.anchorCornerRadius(),\n                });\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.isTransforming = function () {\n        return this._transforming;\n    };\n    Transformer.prototype.stopTransform = function () {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    };\n    Transformer.prototype.destroy = function () {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content.style.cursor = '';\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    };\n    Transformer.prototype.toObject = function () {\n        return Node_1.Node.prototype.toObject.call(this);\n    };\n    return Transformer;\n}(Group_1.Group));\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\nUtil_1.Collection.mapMethods(Transformer);\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/konva/lib/shapes/Transformer.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}}],"sources":{"node_modules/konva/lib/shapes/Transformer.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nvar TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    var x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    var y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return __assign(__assign({}, shape), { rotation: shape.rotation + angleRad, x: x,\n        y: y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    var center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    var snapped = newRotationRad;\n    for (var i = 0; i < snaps.length; i++) {\n        var angle = Global_1.Konva.getAngle(snaps[i]);\n        var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nvar Transformer = (function (_super) {\n    __extends(Transformer, _super);\n    function Transformer(config) {\n        var _this = _super.call(this, config) || this;\n        _this._transforming = false;\n        _this._createElements();\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n        _this.update = _this.update.bind(_this);\n        _this.on(ATTR_CHANGE_LIST, _this.update);\n        if (_this.getNode()) {\n            _this.update();\n        }\n        return _this;\n    }\n    Transformer.prototype.attachTo = function (node) {\n        this.setNode(node);\n        return this;\n    };\n    Transformer.prototype.setNode = function (node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    };\n    Transformer.prototype.getNode = function () {\n        return this._nodes && this._nodes[0];\n    };\n    Transformer.prototype.setNodes = function (nodes) {\n        var _this = this;\n        if (nodes === void 0) { nodes = []; }\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1) {\n            this.rotation(nodes[0].rotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach(function (node) {\n            var additionalEvents = node._attrsAffectingSize\n                .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\n                .join(' ');\n            var onChange = function () {\n                _this._resetTransformCache();\n                if (!_this._transforming) {\n                    _this.update();\n                }\n            };\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR, onChange);\n            node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n            node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n            _this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    };\n    Transformer.prototype._proxyDrag = function (node) {\n        var _this = this;\n        var lastPos;\n        node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n            lastPos = node.getAbsolutePosition();\n            if (!_this.isDragging() && node !== _this.findOne('.back')) {\n                _this.startDrag();\n            }\n        });\n        node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n            if (!lastPos) {\n                return;\n            }\n            var abs = node.getAbsolutePosition();\n            var dx = abs.x - lastPos.x;\n            var dy = abs.y - lastPos.y;\n            _this.nodes().forEach(function (otherNode) {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                var otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag();\n            });\n            lastPos = null;\n        });\n    };\n    Transformer.prototype.getNodes = function () {\n        return this._nodes;\n    };\n    Transformer.prototype.getActiveAnchor = function () {\n        return this._movingAnchorName;\n    };\n    Transformer.prototype.detach = function () {\n        if (this._nodes) {\n            this._nodes.forEach(function (node) {\n                node.off('.' + EVENTS_NAME);\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    };\n    Transformer.prototype._resetTransformCache = function () {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    };\n    Transformer.prototype._getNodeRect = function () {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    };\n    Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n        if (rot === void 0) { rot = this.rotation(); }\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        var box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.__getNodeRect = function () {\n        var _this = this;\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        var totalPoints = [];\n        this.nodes().map(function (node) {\n            var box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: _this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        var tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        var p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    };\n    Transformer.prototype.getX = function () {\n        return this._getNodeRect().x;\n    };\n    Transformer.prototype.getY = function () {\n        return this._getNodeRect().y;\n    };\n    Transformer.prototype.getWidth = function () {\n        return this._getNodeRect().width;\n    };\n    Transformer.prototype.getHeight = function () {\n        return this._getNodeRect().height;\n    };\n    Transformer.prototype._createElements = function () {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    };\n    Transformer.prototype._createAnchor = function (name) {\n        var _this = this;\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', function (e) {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', function () {\n            var rad = Global_1.Konva.getAngle(_this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content.style.cursor = cursor;\n            _this._cursorChange = true;\n        });\n        anchor.on('mouseout', function () {\n            anchor.getStage().content.style.cursor = '';\n            _this._cursorChange = false;\n        });\n        this.add(anchor);\n    };\n    Transformer.prototype._createBack = function () {\n        var _this = this;\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc: function (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: function (ctx, shape) {\n                if (!_this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = _this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n    };\n    Transformer.prototype._handleMouseDown = function (e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e, target: this.getNode() });\n        this.getNode()._fire('transformstart', { evt: e, target: this.getNode() });\n    };\n    Transformer.prototype._handleMouseMove = function (e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        var pp = stage.getPointerPosition();\n        var newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        var oldAbs = anchorNode.getAbsolutePosition();\n        anchorNode.setAbsolutePosition(newNodePos);\n        var newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            var delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            var newRotation = oldRotation + delta;\n            var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            var diff = snappedRot - attrs.rotation;\n            var shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    };\n    Transformer.prototype._handleMouseUp = function (e) {\n        this._removeEvents(e);\n    };\n    Transformer.prototype.getAbsoluteTransform = function () {\n        return this.getTransform();\n    };\n    Transformer.prototype._removeEvents = function (e) {\n        if (this._transforming) {\n            this._transforming = false;\n            window.removeEventListener('mousemove', this._handleMouseMove);\n            window.removeEventListener('touchmove', this._handleMouseMove);\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\n            window.removeEventListener('touchend', this._handleMouseUp, true);\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                node.fire('transformend', { evt: e, target: node });\n            }\n            this._movingAnchorName = null;\n        }\n    };\n    Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n        var _this = this;\n        var oldAttrs = this._getNodeRect();\n        var minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        var allowNegativeScale = true;\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            var offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            var offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        var baseSize = 10000000;\n        var oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        var newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        var delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach(function (node) {\n            var parentTransform = node.getParent().getAbsoluteTransform();\n            var localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            var newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            var attrs = newLocalTransform.decompose();\n            node._batchTransformChanges(function () {\n                node.setAttrs(attrs);\n            });\n            _this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    };\n    Transformer.prototype.forceUpdate = function () {\n        this._resetTransformCache();\n        this.update();\n    };\n    Transformer.prototype._batchChangeChild = function (selector, attrs) {\n        var anchor = this.findOne(selector);\n        anchor._batchTransformChanges(function () {\n            anchor.setAttrs(attrs);\n        });\n    };\n    Transformer.prototype.update = function () {\n        var _this = this;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').each(function (node) {\n            node._batchTransformChanges(function () {\n                node.setAttrs({\n                    width: anchorSize,\n                    height: anchorSize,\n                    offsetX: anchorSize / 2,\n                    offsetY: anchorSize / 2,\n                    stroke: _this.anchorStroke(),\n                    strokeWidth: _this.anchorStrokeWidth(),\n                    fill: _this.anchorFill(),\n                    cornerRadius: _this.anchorCornerRadius(),\n                });\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.isTransforming = function () {\n        return this._transforming;\n    };\n    Transformer.prototype.stopTransform = function () {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    };\n    Transformer.prototype.destroy = function () {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content.style.cursor = '';\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    };\n    Transformer.prototype.toObject = function () {\n        return Node_1.Node.prototype.toObject.call(this);\n    };\n    return Transformer;\n}(Group_1.Group));\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\nUtil_1.Collection.mapMethods(Transformer);\n"},"lineCount":960}},"error":null,"hash":"d7710ea4ebafc7bb81a26ac71f7549a9","cacheData":{"env":{}}}