{"id":"node_modules/konva/lib/filters/Mask.js","dependencies":[{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\package.json","includedInParent":true,"mtime":1593283881516},{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\package.json","includedInParent":true,"mtime":1593215474632},{"name":"../Factory","loc":{"line":3,"column":24},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\filters\\Mask.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Factory.js"},{"name":"../Node","loc":{"line":4,"column":21},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\filters\\Mask.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Node.js"},{"name":"../Validators","loc":{"line":5,"column":27},"parent":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\filters\\Mask.js","resolved":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\konva\\lib\\Validators.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexports.Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/konva/lib/filters/Mask.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}}],"sources":{"node_modules/konva/lib/filters/Mask.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexports.Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n"},"lineCount":143}},"error":null,"hash":"783508e65539ae0ba91778cfc83147f8","cacheData":{"env":{}}}