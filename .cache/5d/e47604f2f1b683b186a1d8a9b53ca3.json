{"id":"node_modules/react-konva/lib/ReactDOMComponentTree.js","dependencies":[{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\package.json","includedInParent":true,"mtime":1593283881516},{"name":"C:\\Users\\Peter\\coding_home\\playingDir\\konvaPlay\\node_modules\\react-konva\\package.json","includedInParent":true,"mtime":1593215474636}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.getClosestInstanceFromNode = getClosestInstanceFromNode;\n// from https://github.com/facebook/react/blob/87ae211ccd8d61796cfdef138d1e12fb7a74f85d/packages/shared/ReactTypeOfWork.js\nvar HostComponent = 5;\nvar HostText = 6;\n\n// adapted FROM: https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOMComponentTree.js\n\nvar randomKey = Math.random().toString(36).slice(2);\nvar internalInstanceKey = '__reactInternalInstance$' + randomKey;\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  while (!node[internalInstanceKey]) {\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var inst = node[internalInstanceKey];\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber, this will always be the deepest root.\n    return inst;\n  }\n\n  return null;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-konva/lib/ReactDOMComponentTree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/react-konva/lib/ReactDOMComponentTree.js":"'use strict';\n\nexports.__esModule = true;\nexports.getClosestInstanceFromNode = getClosestInstanceFromNode;\n// from https://github.com/facebook/react/blob/87ae211ccd8d61796cfdef138d1e12fb7a74f85d/packages/shared/ReactTypeOfWork.js\nvar HostComponent = 5;\nvar HostText = 6;\n\n// adapted FROM: https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOMComponentTree.js\n\nvar randomKey = Math.random().toString(36).slice(2);\nvar internalInstanceKey = '__reactInternalInstance$' + randomKey;\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  while (!node[internalInstanceKey]) {\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var inst = node[internalInstanceKey];\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber, this will always be the deepest root.\n    return inst;\n  }\n\n  return null;\n}"},"lineCount":40}},"error":null,"hash":"89f3e32bf4628058b2780e14e65dbd9d","cacheData":{"env":{}}}